swagger: "2.0"
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0

host: localhost:3000
basePath: /api/v1
schemes:
  - http
  - https
paths:
  /kategori:
    get:
      summary: Returns a list of Kategori.
      description: |
        Returns data of Kategori
      tags:
        - "Kategori"
      produces:
        - application/json
      responses:
        200:
          description: OK
    post:
      summary: Create new Kategori.
      description: Create new Kategori and return the created data on uppercase
      tags:
        - "Kategori"
      parameters:
        - name: create Kategori
          in: body
          required: true
          description: Create Kategori body request
          schema:
            type: object
            properties:
              namaKategori:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
  /kategori/{id}:
    get:
      summary: Returns one of Kategori.
      description: |
        Returns one Kategori
      tags:
        - "Kategori"
      parameters:
        - in: path
          name: id
          type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK
    put:
      summary: Update one of Kategori.
      description: |
        Update one Kategori
      tags:
        - "Kategori"
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - name: update Kategori
          in: body
          required: true
          description: Update Kategori body request
          schema:
            type: object
            properties:
              namaKategori:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
    delete:
      summary: Delete one of Kategori.
      description: |
        Delete one Kategori
      tags:
        - "Kategori"
      parameters:
        - in: path
          name: id
          type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK
  /karyawan:
    get:
      summary: Returns a list of Karyawan.
      description: |
        Returns data of Karyawan
      tags:
        - "Karyawan"
      produces:
        - application/json
      responses:
        200:
          description: OK
    post:
      summary: Create new Karyawan.
      description: Create new Karyawan and return the created data on uppercase
      tags:
        - "Karyawan"
      parameters:
        - name: create Karyawan
          in: body
          required: true
          description: Create Karyawan body request
          schema:
            type: object
            properties:
              namaKaryawan:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
  /karyawan/{id}:
    get:
      summary: Returns one of Karyawan.
      description: |
        Returns one Karyawan
      tags:
        - "Karyawan"
      parameters:
        - in: path
          name: id
          type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK
    put:
      summary: Update one of Karyawan.
      description: |
        Update one Karyawan
      tags:
        - "Karyawan"
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - name: update Karyawan
          in: body
          required: true
          description: Update Karyawan body request
          schema:
            type: object
            properties:
              namaKaryawan:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
    delete:
      summary: Delete one of Karyawan.
      description: |
        Delete one Karyawan
      tags:
        - "Karyawan"
      parameters:
        - in: path
          name: id
          type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK